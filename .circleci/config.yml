version: 2.1
orbs:
  # orgs contain basc recipes and reproducible actions (install node, aws, etc.)
  eb: circleci/aws-elastic-beanstalk@2.0.1
  aws-cli: circleci/aws-cli@3.1.1
  # different jobs are calles later in the workflows sections
jobs:
  build:
    docker:
      # the base image can run most needed actions with orbs
      - image: "cimg/base:stable"
    steps:
      - checkout
      # Use root level package.json to install dependencies in the frontend app
      - run:
          name: Install Front-End Dependencies
          command: npm run frontend:install
      # TODO: Install dependencies in the the backend API          
      - run:
          name: Install API Dependencies
          command: npm run api:install
      # TODO: Lint the frontend
      - run:
          name: Front-End Lint
          command: npm run frontend:lint
      # TODO: Build the frontend app
      - run:
          name: Front-End Build
          command: npm run frontend:build
      # TODO: Build the backend API      
      - run:
          name: API Build
          command: npm run api:build
  # deploy step will run only after manual approval
  deploy:
    docker:
      - image: "cimg/base:stable"
      # more setup needed for aws, node, elastic beanstalk
    steps:
      - eb/setup
      - aws-cli/setup
      - checkout
      # TODO: Set enviroment variables
          environment:
          POSTGRES_USERNAME: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          PORT: 8080
          db-PORT: 5432
          POSTGRES_HOST: database-1.c3of9rlrzweb.us-east-1.rds.amazonaws.com
          AWS_REGION: us-east-1
          AWS_PROFILE: default
          AWS_BUCKET: arn:aws:s3:::udacity-udagram-tarek-aldahshan/archive.zip
          URL: http://udacityudagram-env.eba-p4ybyppz.us-east-1.elasticbeanstalk.com/
          JWT_SECRET: abcdef
      - run:
          name: Deploy App
          # TODO: Install, build, deploy in both apps
          command: npm run deploy
            
workflows:
  udagram:
    jobs:
      - build
      - hold:
          filters:
            branches:
              only:
                - master
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
